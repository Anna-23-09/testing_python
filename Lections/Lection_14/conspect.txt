--- Основы doctest ---
подходит для следующих задач:
- проверка актуальности строк документации модуля путем проверки того, что
все интерактивные примеры по-прежнему работают в соответствии с документацией
- для регрессионного тестирования. Чтобы убедиться, что интерактивные
примеры из тестового файла или тестового объекта работают должным
образом
- позволяют написать учебную документацию для пакета, обильно
иллюстрированную примерами ввода-вывода. В зависимости от того, что
выделено - примеры или пояснительный текст, это может быть что-то вроде
"грамотного тестирования" или "исполняемой документации"

--- Разработка через тестирование ---
В TDD(test-driven development) выделяют следующие этапы:
- добавление текста
- запуск всех тестов: убедиться, что новые тесты не проходят
- написать код
- запуск всех тестов: убедиться, что все тесты проходят
- рефакторинг
- повторить цикл

--- Проверка исполняемой документации ---
testfile запускает тесты внутри файлов доументации

import doctest

doctest.testfile('doc_file.txt', verbose=True)


--- Запуск тестов из командной строки ---
Для запуска тестов зачастую используют вызов из терминала ОС

- $ python3 -m doctest .\prime.py
- $ python3 -m doctest .\prime.py -v
- $ python3 -m doctest .\prime.md
- $ python3 -m doctest .\prime.md -v



--- Основы тестирования с unittest ---

Общие моменты

import unittest

class TestCaseName(unittest.TestCase):
    def test_method(self):
        self.assertEqual(2 * 2, 5, msg='Видимо и в этой вселенной не работает:-(')

if __name__ == '__main__':
    unittest.main()


$ python -m unittest tests.py -v

--- Подготовка теста и сворачивание работ ---

def setUp(self) -> None
- метод setUp выполняется перед запуском каждого теста

def tearDone(self) -> None
метод tearDone выполняется, если был выполнен метод setUp, независимо от того, пройден тест или провален


--- Основы тестирования с pytest ---
 pip install pytest

 Код с assert:
 assert утверждение, "Ложное утверждение"

 Код с if, вместо assert:
 if утверждение:
    pass
 else:
    raise AssertionError("Ложное утверждение")

 $ python3 -m pytest tests.py -vv
 $ pytest tests_pt.py


--- pytest fixtures ---
Фикстуры pytest не только заменяют setUp и tearDown, нои дают
более широкие возможности тестирования

import pytest

@pytest.fixture
def fix():
    ...
    return result

def test_append(fix):
    # обращаемся к result из fix по имени "fix"
    ...