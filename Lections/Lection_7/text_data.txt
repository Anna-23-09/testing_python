Lorem ipsum dolor sit amet, consectetur adipiscing elit,
sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
Ut enim ad minim veniam, quis nostrud exercitation ullamco
laboris nisi ut aliquip ex ea commodo consequat.
Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu
fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident,
sunt in culpa qui officia deserunt mollit anim id est laborum.
Привет, мир! # кодировка отличается, поэтому на выводе получим абракадабру

Режимы работы с файлами:
'r' - открыть для чтения (по умолчанию)
'w' - открыть для записи, предварительно очистив файл
'x' - открыть для эксклюзивного создания. Вернет ошибку, если файл уже существует
'a' - открыть для записи в конец файла, если он существует
'b' - двоичный режим
't' - текстовый режим (по умолчанию)
'+' - открыт для обновления (чтение и запись)

метод f.close()
Если в коде отсутствует метод close(), то даже
при успешном завершении программы не гарантируется
сохранение всех данных в файле

Прочие необязательные параметры функции open:
- buffering - определяет режим буферизации
- errors - используется только в текстовом режиме и определяет
поведение в случае ошибок кодирования или декодирования
- newline - отвечает за преобразование окончания строки
- closefd - указывает оставлять ли файловый десриптор открытвм
при закрытии файла
- opener - позволяет передать пользовательскую функцию для
открытия файла

Менеджер контекста with open

with open('text_data.txt', 'r+', encoding='utf-8') as f:
    print(list(f))
- гарантирует закрытие файла и сохранение информации

Чтение файла
- list(f) - чтение в список
- res = f.read() - чтение методом read
- res = f.readline() - чтение методом readline
- for line in f: - чтение циклом for

Запись и добавление в файл
- res = f.write(text) - запись методом write
- f.writelines('\n'.join(text)) - запись методом writelines
- print(text, file=f) - print в файл
w - создаем новый пустой файл для записи. Если файл существует,
открываем его для записи и удаляем данные, которые в нем хранились
x - создаем новый пустой файл для записи. Если файл существует,
вызываем ошибку
a - открываем существующий файл для записи в конец, добавления данных.
Если файл не существует, создаем новый файл и записываем в него.

Методы перемещения в файле
- f.tell() - метод tell возвращает текущую позицию в файле
- seek(offset, whence=0):
    offset - смещение относительно опорной точки
    whence - способ выбора опорной точки
        whence=0 - отсчет от начала файла
        whence=1 - отсчет от текущей позиции в файле
        whence=2 - отсчет от конца файла
- truncate(size=None) - метод изменяет размер файла.
Если не передать значение в параметр size, будет удалена часть файла от текущей позиции до конца

